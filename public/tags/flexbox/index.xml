<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flexbox on My Coding Blog</title>
    <link>/tags/flexbox/index.xml</link>
    <description>Recent content in Flexbox on My Coding Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/flexbox/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Navigation Header with Flexbox</title>
      <link>/post/navigation-header-with-flexbox/</link>
      <pubDate>Fri, 02 Oct 2015 13:02:45 -0600</pubDate>
      
      <guid>/post/navigation-header-with-flexbox/</guid>
      <description>&lt;p&gt;I decided to continue with the small flexbox tutorials. So here is another one. In this tutorial, we will make a navigation header using flexbox. If you haven&amp;rsquo;t read my first post on flexbox, you should check it out &lt;a href=&#34;http://mycodingblog.com/discovering-flexbox/&#34;&gt;here&lt;/a&gt;. I have made a &lt;a href=&#34;http://codepen.io/krjordan/pen/PPppOd/&#34;&gt;codepen&lt;/a&gt; of what we will be building. Let&amp;rsquo;s get started with the HTML.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;div id=&amp;quot;header&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;
      &amp;lt;i class=&amp;quot;fa fa-tree&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
    &amp;lt;/a&amp;gt;
    &amp;lt;nav role=&#39;navigation&#39;&amp;gt;
      &amp;lt;ul&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Clients&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Contact Us&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
    &amp;lt;/nav&amp;gt;
    &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Learn More
      &amp;lt;i class=&amp;quot;fa fa-bars&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
    &amp;lt;/a&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nothing new here, it is a very simple navbar using some icons from &lt;a href=&#34;https://fortawesome.github.io/Font-Awesome/get-started/&#34;&gt;Font Awesome&lt;/a&gt;. I&amp;rsquo;ll style it up a bit so we can get to the point. I&amp;rsquo;m using &lt;a href=&#34;http://sass-lang.com/&#34;&gt;SASS&lt;/a&gt;, so if you are still using regular CSS you should switch! If you are just starting out, check out the &lt;a href=&#34;http://codepen.io/krjordan/pen/PPppOd/&#34;&gt;codepen&lt;/a&gt; and click the &lt;code class=&#34;language-none&#34;&gt;view compiled&lt;/code&gt; button to view the regular CSS. This will also show you all of the prefixers too (&lt;code class=&#34;language-css&#34;&gt;-webkit-&lt;/code&gt;, &lt;code class=&#34;language-css&#34;&gt;-moz&lt;/code&gt;, etc.).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;#header {
  height: 2.5em;
  color: #333;
  a {
    text-decoration: none;
    color: #333;
    &amp;amp;:hover{
      color: lighten(#333, 30%);
    }
  }
  i {
    padding: 0 0.625em;
    font-size: 1.250em;
    &amp;amp;:hover {
      color: lighten(#333, 30%);
    }
  }
  nav {
    ul {
      li {
        list-style-type: none;
        padding: 0.625em 1.250em;
        border-right: 1px solid #e5e5e5;
        &amp;amp;:last-of-type {
          border: none;
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So this will give us:
&lt;img src=&#34;/img/Flexbox_Navigation_Snippet-4.png&#34; alt=&#34;Screenshot Without Flexbox&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;adding-flexbox&#34;&gt;Adding Flexbox&lt;/h3&gt;

&lt;p&gt;So lets add some flexbox. We&amp;rsquo;ll start off by adding &lt;code class=&#34;language-css&#34;&gt;display: flex;&lt;/code&gt;, &lt;code class=&#34;language-css&#34;&gt;align-items: center;&lt;/code&gt; and &lt;code class=&#34;language-css&#34;&gt;justify-content: center;&lt;/code&gt; to the &lt;code class=&#34;language-css&#34;&gt;div#header&lt;/code&gt;, like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;#header {
  display: flex;
  align-items: center;
  justify-content: center;
  ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/img/Flexbox_Navigation_Snippet-1.png&#34; alt=&#34;Screenshot Adding Flexbox&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This centers the content inside the header. &lt;strong&gt;Note:&lt;/strong&gt; the &lt;code class=&#34;language-html&#34;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; is pushing the tree icon to the left. No need to concern ourselves with that. Now lets style the &lt;code class=&#34;language-html&#34;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; to &lt;code class=&#34;language-css&#34;&gt;display: flex;&lt;/code&gt;, &lt;code class=&#34;language-css&#34;&gt;align-items: center;&lt;/code&gt; and &lt;code class=&#34;language-css&#34;&gt;justify-content&lt;/code&gt;. For the sake of this tutorial, and because I hate incomplete tutorials that skip over certain sections and assume the reader knows what they don&amp;rsquo;t know&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;...
nav {
  ul {
    display: flex;
    align-items: center;
    justify-content: center;
    li {
      ...
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/img/Flexbox_Navigation_Snippet-2.png&#34; alt=&#34;Screenshot of more flexbox additions&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Alright, so we are almost there! We now have our navbar and unordered list centered. Now we just need to figure out a way to push the tree icon to the left and the &amp;ldquo;Learn More&amp;rdquo; and menu icon to the right. We could do something crazy like mess with the width of the &lt;code class=&#34;language-html&#34;&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; or use padding or margin. I dare say we could even use &lt;code class=&#34;language-css&#34;&gt;position: absolute;&lt;/code&gt;, but &lt;strong&gt;NO!!&lt;/strong&gt; There is a better solution. Let&amp;rsquo;s look at &lt;code class=&#34;language-css&#34;&gt;flex-grow: 1;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&#34;language-css&#34;&gt;flex-grow&lt;/code&gt; is defined by &lt;a href=&#34;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&#34;&gt;CSS-Tricks&lt;/a&gt; as&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The ability for a flex item to grow if necessary. It accepts a unitless value that serves as a proportion. It dictates what amount of the available space inside the flex container item should take up.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I personally use the &lt;code class=&#34;language-css&#34;&gt;flex&lt;/code&gt; shorthand property since it only requires one parameter, &lt;code class=&#34;language-css&#34;&gt;flex-grow&lt;/code&gt;. It will accomplish the same goal. So we will add &lt;code class=&#34;language-css&#34;&gt;flex: 1;&lt;/code&gt; to our &lt;code class=&#34;language-html&#34;&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element. Like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;...

nav {
  flex: 1;
  ul {
    display: flex;
    align-items: center;
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Our header will now be complete.
&lt;img src=&#34;/img/Flexbox_Navigation_Snippet-5.png&#34; alt=&#34;Screenshot of Finished navbar&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So without using excessive padding, margin, absolute positioning or a framework we have built a simple navigation header. It isn&amp;rsquo;t mobile friendly, but works well on medium and up views. We would need to do a bit more to make it responsive.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s all for now. The complete SASS file is written below or, once again, you can check out the &lt;a href=&#34;http://codepen.io/krjordan/pen/PPppOd&#34;&gt;codepen&lt;/a&gt; for the demo and code. &lt;del&gt;When time permits, hopefully soon, I will add a comment functionality to the blog&lt;/del&gt;. If you have any questions or anything to add, be sure to leave a comment below. You can also reach me on Twitter at &lt;a href=&#34;https://twitter.com/RyanJ1500&#34;&gt;@RyanJ1500&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;#header {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2.5em;
  color: #333;
  a {
    text-decoration: none;
    color: #333;
    &amp;amp;:hover {
      color: lighten(#333, 30%);
    }
  }
  i {
    padding: 0 0.625em;
    font-size: 1.250em;
    &amp;amp;:hover {
      color: lighten(#333, 30%);
    }
  }
  nav {
    flex: 1;
    ul {
      display: flex;
      align-items: center;
      justify-content: center;
      li {
        list-style-type: none;
        padding: 0.625em 1.250em;
        border-right: 1px solid #e5e5e5;
        &amp;amp;:last-of-type {
          border: none;
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Discovering Flexbox</title>
      <link>/post/discovering-flexbox/</link>
      <pubDate>Tue, 15 Sep 2015 15:06:14 -0600</pubDate>
      
      <guid>/post/discovering-flexbox/</guid>
      <description>&lt;p&gt;So, now that I work with a team of web developers, I am constantly learning new things. One of the many new things I&amp;rsquo;ve learned about, is flexbox. I have to admit, I found it very intimidating at first. I figured I&amp;rsquo;d make a small tutorial about flexbox using a very simple navigation menu.&lt;/p&gt;

&lt;p&gt;Flexbox makes things easier, especially when it comes to centering items. One of the main reasons I use &lt;a href=&#34;http://getbootstrap.com&#34;&gt;Bootstrap&lt;/a&gt; in the majority of my projects is due to it being a pain to layout items and get them centered. Using frameworks like &lt;a href=&#34;http://getbootstrap.com&#34;&gt;Bootstrap&lt;/a&gt; and &lt;a href=&#34;http://foundation.zurb.com&#34;&gt;Foundation&lt;/a&gt; help you get up and running quickly. However, most developers (I&amp;rsquo;ve been guilty of this) don&amp;rsquo;t go back and remove the unused CSS or use a CDN where most users will have the file cached, but for those who don&amp;rsquo;t, well it could take a bit more time to load.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;With a few lines of CSS, we can get a very simple navigation menu centered and listed horizontally. For this example, I&amp;rsquo;ll just use an unordered list.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;body&amp;gt;
  &amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Blog&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/img/Discovering_Flexbox_1.png&#34; alt=&#34;HTML output&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll add a bit of styling to make our page look a bit more presentable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;li {
  list-style: none;
  padding: 15px;
}

li:hover {
  color: red;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 5px;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/img/Screen-Shot-2015-09-15-at-6-08-30-PM.png&#34; alt=&#34;HTML output&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Alright, now it&amp;rsquo;s starting to look like a navigation menu. Now we just need to add &lt;code class=&#34;language-css&#34;&gt;display: flex;&lt;/code&gt; to the container of the items we want to center. In this case, it&amp;rsquo;s the &lt;code class=&#34;language-html&#34;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/Discovering_Flexbox_and_main_css_-_svg.png&#34; alt=&#34;HTML output&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The default value for &lt;code class=&#34;language-css&#34;&gt;flex-direction: row;&lt;/code&gt; ,which just so happens to be what we need. Now we need to add &lt;code class=&#34;language-css&#34;&gt;justify-content: center;&lt;/code&gt; and we&amp;rsquo;re done.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/Discovering_Flexbox_and_main_css_-_svg-1.png&#34; alt=&#34;HTML output&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The complete CSS file looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;ul {
  display: flex;
  justify-content: center;
}

li {
  list-style: none;
  padding: 15px;
}

li:hover {
  color: red;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 5px;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: inherit;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check out the &lt;a href=&#34;http://codepen.io/krjordan/pen/pjgqZZ/?editors=110&#34;&gt;codepen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flexbox offers a lot more than just giving us the ability to quickly center elements. I plan on writing a few more posts on the topic, but you should check out two great resources I&amp;rsquo;ve found. CSS-Tricks has a great post on it called &lt;a href=&#34;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&#34;&gt;A Complete Guide to Flexbox&lt;/a&gt; that I refer to quite frequently and Wes Bos has some awesome free &lt;a href=&#34;http://flexbox.io/&#34;&gt;video tutorials&lt;/a&gt; to help get you started.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>